#!/usr/bin/env python3
"""
Simple script to create BlogBlock entries for horoscope systems.
This script uses the existing database schema with 'position' column.
"""
import os
from app import create_app, db
from app.models import BlogBlock
from datetime import datetime

def create_horoscope_blog_blocks():
    """Create BlogBlock entries for all horoscope systems"""
    # Clean up DATABASE_URL (remove any newlines)
    if 'DATABASE_URL' in os.environ:
        os.environ['DATABASE_URL'] = os.environ['DATABASE_URL'].strip()

    app = create_app()
    
    with app.app_context():
        print("üîß Creating BlogBlock entries for horoscope systems...")
        
        # Systems for horoscopes (positions 1-8)
        systems = [
            ('–Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∞ –∞—Å—Ç—Ä–æ–ª–æ–≥—ñ—è', 1),
            ('–ö–∏—Ç–∞–π—Å—å–∫–∞ –∞—Å—Ç—Ä–æ–ª–æ–≥—ñ—è', 2),
            ('–Ü–Ω–¥—ñ–π—Å—å–∫–∞ –∞—Å—Ç—Ä–æ–ª–æ–≥—ñ—è', 3),
            ('–õ–∞–ª –ö—ñ—Ç–∞–±', 4),
            ('–î–∂–π–æ—Ç—ñ—à', 5),
            ('–ù—É–º–µ—Ä–æ–ª–æ–≥—ñ—è', 6),
            ('–¢–∞—Ä–æ', 7),
            ('–ü–ª–∞–Ω–µ—Ç–∞—Ä–Ω–∞ –∞—Å—Ç—Ä–æ–ª–æ–≥—ñ—è', 8),
        ]
        
        created_count = 0
        
        for name, position in systems:
            # Check if block already exists
            existing_block = BlogBlock.query.filter_by(position=position).first()
            
            if not existing_block:
                # Create new block
                block = BlogBlock(
                    title=name,
                    content=f"–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã –ø–æ —Å–∏—Å—Ç–µ–º–µ {name}. –≠—Ç–æ—Ç –±–ª–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏.",
                    summary=f"–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - {name}",
                    position=position,
                    is_active=True,
                    created_at=datetime.utcnow(),
                    updated_at=datetime.utcnow()
                )
                db.session.add(block)
                print(f"‚úÖ Created: {name} (position={position})")
                created_count += 1
            else:
                # Ensure existing block is active
                existing_block.is_active = True
                existing_block.updated_at = datetime.utcnow()
                print(f"‚úÖ Updated: {name} (position={position}) - set to active")
        
        # Commit changes
        try:
            db.session.commit()
            print(f"\nüéâ BlogBlock creation completed!")
            print(f"üìä Created/Updated: {created_count} blocks")
            
            # List all blocks for verification
            print(f"\nüìã All BlogBlock entries:")
            all_blocks = BlogBlock.query.order_by(BlogBlock.position).all()
            for block in all_blocks:
                print(f"   - Position {block.position}: {block.title} (active: {block.is_active})")
            
            return True
            
        except Exception as e:
            db.session.rollback()
            print(f"‚ùå Error: {str(e)}")
            return False

if __name__ == "__main__":
    create_horoscope_blog_blocks()
