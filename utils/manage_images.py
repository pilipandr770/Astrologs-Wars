#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
"""

import os
import shutil
from datetime import datetime
from app import create_app, db
from app.models import Block, Product, Category, PaymentMethod, ProductImage

def check_missing_images():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ë–î"""
    app = create_app()
    
    with app.app_context():
        print("üîç –ü–†–û–í–ï–†–ö–ê –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–• –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô\n")
        
        uploads_path = os.path.join('app', 'static', 'uploads')
        missing_files = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏
        blocks = Block.query.filter(Block.image.isnot(None)).all()
        print(f"üìã –ë–ª–æ–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {len(blocks)}")
        for block in blocks:
            file_path = os.path.join(uploads_path, block.image)
            if not os.path.exists(file_path):
                print(f"‚ùå –ë–ª–æ–∫ '{block.title}': —Ñ–∞–π–ª {block.image} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                missing_files.append(('block', block.id, block.image))
            else:
                print(f"‚úÖ –ë–ª–æ–∫ '{block.title}': {block.image}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
        products = Product.query.filter(Product.image.isnot(None)).all()
        print(f"\nüõçÔ∏è –ü—Ä–æ–¥—É–∫—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {len(products)}")
        for product in products:
            file_path = os.path.join(uploads_path, product.image)
            if not os.path.exists(file_path):
                print(f"‚ùå –ü—Ä–æ–¥—É–∫—Ç '{product.name}': —Ñ–∞–π–ª {product.image} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                missing_files.append(('product', product.id, product.image))
            else:
                print(f"‚úÖ –ü—Ä–æ–¥—É–∫—Ç '{product.name}': {product.image}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        product_images = ProductImage.query.all()
        print(f"\nüñºÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {len(product_images)}")
        for img in product_images:
            file_path = os.path.join(uploads_path, img.image_path)
            if not os.path.exists(file_path):
                print(f"‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: —Ñ–∞–π–ª {img.image_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                missing_files.append(('product_image', img.id, img.image_path))
            else:
                print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: {img.image_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = Category.query.filter(Category.image.isnot(None)).all()
        print(f"\nüìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {len(categories)}")
        for category in categories:
            file_path = os.path.join(uploads_path, category.image)
            if not os.path.exists(file_path):
                print(f"‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category.name}': —Ñ–∞–π–ª {category.image} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                missing_files.append(('category', category.id, category.image))
            else:
                print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category.name}': {category.image}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        payment_methods = PaymentMethod.query.filter(PaymentMethod.qr_code.isnot(None)).all()
        print(f"\nüí≥ –ü–ª–∞—Ç–µ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å QR-–∫–æ–¥–∞–º–∏: {len(payment_methods)}")
        for method in payment_methods:
            file_path = os.path.join(uploads_path, method.qr_code)
            if not os.path.exists(file_path):
                print(f"‚ùå –ü–ª–∞—Ç–µ–∂–Ω—ã–π –º–µ—Ç–æ–¥ '{method.name}': —Ñ–∞–π–ª {method.qr_code} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                missing_files.append(('payment_method', method.id, method.qr_code))
            else:
                print(f"‚úÖ –ü–ª–∞—Ç–µ–∂–Ω—ã–π –º–µ—Ç–æ–¥ '{method.name}': {method.qr_code}")
        
        print(f"\nüìä –ò–¢–û–ì–û:")
        print(f"–í—Å–µ–≥–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤: {len(missing_files)}")
        
        return missing_files

def list_upload_files():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ uploads"""
    uploads_path = os.path.join('app', 'static', 'uploads')
    
    print("üìÅ –§–ê–ô–õ–´ –í –ü–ê–ü–ö–ï UPLOADS:\n")
    
    if not os.path.exists(uploads_path):
        print("‚ùå –ü–∞–ø–∫–∞ uploads –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return
    
    files = os.listdir(uploads_path)
    files = [f for f in files if not f.startswith('.')]
    
    if not files:
        print("üì≠ –ü–∞–ø–∫–∞ uploads –ø—É—Å—Ç–∞")
        return
    
    for file in sorted(files):
        file_path = os.path.join(uploads_path, file)
        size = os.path.getsize(file_path)
        size_mb = size / (1024 * 1024)
        print(f"üìÑ {file} ({size_mb:.2f} MB)")
    
    print(f"\n–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")

def backup_uploads():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–∞–ø–∫–∏ uploads"""
    uploads_path = os.path.join('app', 'static', 'uploads')
    
    if not os.path.exists(uploads_path):
        print("‚ùå –ü–∞–ø–∫–∞ uploads –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return
    
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    backup_path = f"uploads_backup_{timestamp}"
    
    shutil.copytree(uploads_path, backup_path)
    print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_path}")

def show_gitignore_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å .gitignore –¥–ª—è –ø–∞–ø–∫–∏ uploads"""
    print("üìù –°–¢–ê–¢–£–° .GITIGNORE:\n")
    
    with open('.gitignore', 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    upload_lines = [i for i, line in enumerate(lines) if 'uploads' in line.lower()]
    
    for i in upload_lines:
        line = lines[i].strip()
        if line.startswith('#'):
            print(f"üí¨ {line}")
        elif 'uploads/*' in line:
            print(f"üö´ {line} (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è)")
        elif 'uploads' in line:
            print(f"üìÅ {line}")

if __name__ == "__main__":
    print("üñºÔ∏è –£–¢–ò–õ–ò–¢–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò\n")
    
    import sys
    
    if len(sys.argv) > 1:
        command = sys.argv[1]
        
        if command == 'check':
            check_missing_images()
        elif command == 'list':
            list_upload_files()
        elif command == 'backup':
            backup_uploads()
        elif command == 'gitignore':
            show_gitignore_status()
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
    else:
        print("üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("  python manage_images.py check     - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        print("  python manage_images.py list      - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã")
        print("  python manage_images.py backup    - —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é")
        print("  python manage_images.py gitignore - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å .gitignore")
        print()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—ã—Å—Ç—Ä—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        list_upload_files()
        print("\n" + "="*50 + "\n")
        check_missing_images()
        print("\n" + "="*50 + "\n")
        show_gitignore_status()
