#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ —Å URL
"""

from app import create_app, db
from app.models import PaymentMethod
import json

def test_manual_payment_creation():
    app = create_app()
    
    with app.app_context():
        print("=== –¢–ï–°–¢ –†–£–ß–ù–û–ì–û –°–û–ó–î–ê–ù–ò–Ø –ú–ï–¢–û–î–ê –° URL ===\n")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–æ–¥ —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤ –∞–¥–º–∏–Ω–∫–µ
        method = PaymentMethod()
        method.name = "Test Stripe Manual"
        method.name_ua = "Test Stripe Manual"
        method.type = "stripe"
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ JSON –∫–∞–∫ –≤ –∞–¥–º–∏–Ω–∫–µ
        json_string = '{"url": "https://buy.stripe.com/test_manual_12345"}'
        print(f"JSON —Å—Ç—Ä–æ–∫–∞: {json_string}")
        
        try:
            parsed_details = json.loads(json_string)
            print(f"‚úÖ JSON –ø–∞—Ä—Å–∏–Ω–≥ —É—Å–ø–µ—à–µ–Ω: {parsed_details}")
            method.details = parsed_details
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
            method.details = json_string
        
        method.is_active = True
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        try:
            db.session.add(method)
            db.session.commit()
            print(f"‚úÖ –ú–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω —Å ID: {method.id}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
            db.session.rollback()
        
        print()

def check_all_methods():
    app = create_app()
    
    with app.app_context():
        print("=== –í–°–ï –ú–ï–¢–û–î–´ –í –ë–î ===\n")
        
        methods = PaymentMethod.query.all()
        
        for method in methods:
            print(f"ID: {method.id} | {method.name} ({method.type})")
            print(f"Details: {repr(method.details)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
            if isinstance(method.details, dict) and 'url' in method.details:
                print(f"‚úÖ URL: {method.details['url']}")
            else:
                print("‚ùå URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("---")

def test_json_formats():
    print("=== –¢–ï–°–¢ –†–ê–ó–õ–ò–ß–ù–´–• JSON –§–û–†–ú–ê–¢–û–í ===\n")
    
    test_strings = [
        '{"url": "https://example.com"}',  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π
        "{'url': 'https://example.com'}",  # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π - –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏
        '{url: "https://example.com"}',    # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π - –∫–ª—é—á –±–µ–∑ –∫–∞–≤—ã—á–µ–∫
        '{"url":"https://example.com","description":"Test"}',  # –°–ª–æ–∂–Ω—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
        '{"url": "https://example.com",}',  # –° –ª–∏—à–Ω–µ–π –∑–∞–ø—è—Ç–æ–π
    ]
    
    for i, test_str in enumerate(test_strings, 1):
        print(f"–¢–µ—Å—Ç {i}: {test_str}")
        try:
            result = json.loads(test_str)
            print(f"‚úÖ –£—Å–ø–µ—Ö: {result}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print()

if __name__ == "__main__":
    print("üîç –¢–ï–°–¢ –ü–õ–ê–¢–ï–ñ–ù–´–• –ú–ï–¢–û–î–û–í\n")
    
    test_json_formats()
    print("\n" + "="*50 + "\n")
    check_all_methods()
    print("\n" + "="*50 + "\n")
    test_manual_payment_creation()
    print("\n" + "="*50 + "\n")
    check_all_methods()
